{
    "timeline": [
        {
            "id": 18,
            "project_name": "Step Functions Workflow Implementation",
            "description": "A project to automate and manage decision-making processes using AWS Step Functions. It ensures data validation, error handling, and efficient task execution.",
            "year": 2024,
            "month": 9,
            "technologies_used": [
                "AWS Step Functions",
                "AWS Lambda",
                "Error Handling",
                "Data Validation"
            ]
        },
        {
            "id": 17,
            "project_name": "AWS Infrastructure Setup with Terraform",
            "description": "Automated AWS infrastructure provisioning using Terraform, incorporating services like EKS, RDS, MongoDB, and Vault for a cloud-based application setup.",
            "year": 2024,
            "month": 9,
            "technologies_used": [
                "Terraform",
                "AWS Services",
                "Kubernetes",
                "Helm Charts",
                "Vault HCP",
                "Service Mesh",
                "Networking",
                "Database Management",
                "Cloud Security"
            ]
        },
        {
            "id": 16,
            "project_name": "Migration and Scalability",
            "description": "The project involved improving scalability by separating an EC2 instance running an application and two databases (Milvus and Supabase), and implementing auto-scaling for the application.",
            "year": 2023,
            "month": 8,
            "technologies_used": [
                "AWS EC2",
                "VPC & Subnets",
                "AWS ALB",
                "Docker & Docker Compose",
                "Auto-Scaling"
            ]
        },
        {
            "id": 15,
            "project_name": "OCR Read Using LLM for Readability and Understanding",
            "description": "The project utilized large language models (LLMs) for Optical Character Recognition (OCR) to extract and structure menu data from images. The task also involved addressing Turkish special character encoding issues and ensuring data was output in a structured JSON format.",
            "year": 2024,
            "month": 8,
            "technologies_used": [
                "Amazon Bedrock",
                "Claude 3 Haiku",
                "Python",
                "JSON",
                "Base64"
            ]
        },
        {
            "id": 14,
            "project_name": "Deploying and Integrating Kubeflow on AWS EKS",
            "description": "The goal of this project was to deploy Kubeflow on Amazon EKS, manage machine learning pipelines, and integrate MLflow for enhanced model tracking and experimentation.",
            "year": 2024,
            "month": 7,
            "technologies_used": [
                "Kubeflow",
                "AWS EKS",
                "MLflow",
                "Kubernetes",
                "Cloud Infrastructure",
                "CI/CD"
            ]
        },
        {
            "id": 13,
            "project_name": "AI Model Fine-Tuning with Data Collection and Evaluation",
            "description": "The project aimed to fine-tune an AI model through a structured data collection process, followed by evaluation and optimization to improve model performance using custom prompts.",
            "year": 2024,
            "month": 6,
            "technologies_used": [
                "AI Model Fine-Tuning",
                "Data Collection",
                "Supervised Learning",
                "Data Cleaning",
                "Feature Engineering",
                "Model Optimization"
            ]
        },
        {
            "id": 12,
            "project_name": "Migration from Cassandra on EC2 to Cassandra on EKS",
            "description": "Successfully migrated data between two Cassandra clusters, moving from EC2-hosted environment to EKS-hosted Cassandra. Focused on data consistency, minimal downtime, and schema replication.",
            "year": 2024,
            "month": 5,
            "technologies_used": [
                "Apache Cassandra",
                "Apache Spark",
                "EKS"
            ]
        },
        {
            "id": 11,
            "project_name": "AWS Services Architecture Implementation Using Terraform",
            "description": "Implemented scalable AWS infrastructure using ECS, EC2, ASG with GPU instances, and ALBs for secure and efficient traffic management. Automated deployment with Terraform.",
            "year": 2024,
            "month": 4,
            "technologies_used": [
                "Terraform",
                "AWS ECS",
                "AWS EC2",
                "AWS ALB"
            ]
        },
        {
            "id": 10,
            "project_name": "Chat Interface with Large Language Models (LLM) for CLI Command Execution",
            "description": "An interactive chat interface built with Streamlit that integrates multiple LLMs to process user queries and execute corresponding CLI commands, with a control mechanism for accuracy and a Retrieval-Augmented Generation (RAG) system for improved performance.",
            "year": 2024,
            "month": 3,
            "technologies_used": [
                "Streamlit",
                "Llama3",
                "Anthropic Models",
                "AWS Models",
                "Claude Models",
                "Cohere",
                "Retrieval-Augmented Generation (RAG)"
            ]
        },
        {
            "id": 9,
            "project_name": "Amazon Connect Call Center Integration and AWS Infrastructure",
            "description": "Designed and implemented a scalable, secure call center system using Amazon Connect, integrating various AWS services like Lambda, DynamoDB, S3, Kinesis Data Firehose, EventBridge, SQS, and QuickSight to enhance customer service and provide real-time data processing and analytics.",
            "year": 2024,
            "month": 2,
            "technologies_used": [
                "Amazon Connect",
                "AWS Lambda",
                "Amazon DynamoDB",
                "Amazon S3",
                "Amazon Kinesis Data Firehose",
                "Amazon QuickSight",
                "Amazon EventBridge",
                "Amazon SQS",
                "Amazon RDS"
            ]
        },
        {
            "id": 8,
            "project_name": "Terraform and CI/CD for AWS Services with Multi-Environment Setup",
            "description": "Set up AWS infrastructure using Terraform and implemented a CI/CD pipeline to manage deployments across production and staging environments. The project involved the configuration of various AWS services including CodePipeline, RDS, VPC, ECS, Redis, ALB, Bastion EC2, SES, Route 53, and SSL certificates.",
            "year": 2024,
            "month": 1,
            "technologies_used": [
                "Terraform",
                "AWS Services",
                "CI/CD Pipeline",
                "Multi-Environment Setup",
                "ECS",
                "RDS",
                "Redis",
                "SSL Certificates",
                "Route 53"
            ]
        },
        {
            "id": 7,
            "project_name": "Terraform and CI/CD for AWS Services",
            "description": "This project involved setting up an AWS infrastructure using Terraform and implementing a CI/CD pipeline for automated deployments. The infrastructure included AWS services such as CodePipeline, RDS, VPC, EKS, S3, VPN, and Bastion EC2, with secure connectivity between EKS and RDS.",
            "year": 2023,
            "month": 12,
            "technologies_used": [
                "Terraform",
                "CI/CD",
                "AWS Services",
                "EKS",
                "RDS",
                "VPC",
                "Automation"
            ]
        },
        {
            "id": 6,
            "project_name": "Debugging AWS Services Integration",
            "description": "Debugged an AWS environment involving OpenSearch, RDS, ECS, and other services to resolve deployment issues with GPU-enabled EC2 instances within ECS, enabling successful CI/CD processes.",
            "year": 2023,
            "month": 11,
            "technologies_used": [
                "AWS ECS",
                "Amazon EC2",
                "Amazon OpenSearch",
                "Amazon RDS",
                "Amazon VPC",
                "Application Load Balancer (ALB)",
                "Amazon S3",
                "AWS CodePipeline",
                "CloudWatch"
            ]
        },
        {
            "id": 5,
            "project_name": "Terraform and AI Integration for Stable Diffusion",
            "description": "Integrating AWS services with Terraform to create a scalable, cost-optimized environment for image generation using Stable Diffusion. The infrastructure supports AI-based image generation with automated scaling and efficient cost management.",
            "year": 2023,
            "month": 11,
            "technologies_used": [
                "Terraform",
                "AWS Lambda",
                "Stable Diffusion",
                "AWS EC2",
                "DynamoDB",
                "Amazon S3",
                "AWS Systems Manager (SSM)",
                "Boto3"
            ]
        },
        {
            "id": 4,
            "project_name": "Terraform for AWS Integration with Redshift and Glue",
            "description": "Extended an existing Terraform setup to integrate AWS Redshift with the existing infrastructure, enabling data processing and analytics capabilities.",
            "year": 2023,
            "month": 10,
            "technologies_used": [
                "Terraform",
                "AWS Redshift",
                "AWS Glue"
            ]
        },
        {
            "id": 3,
            "project_name": "Terraform for AWS and SageMaker Model Deployment",
            "description": "Automated AWS infrastructure provisioning using Terraform, including Elastic Beanstalk, API Gateway, Lambda, and SageMaker for machine learning model deployment and real-time inference.",
            "year": 2023,
            "month": 10,
            "technologies_used": [
                "Terraform",
                "AWS",
                "SageMaker",
                "Django",
                "Serverless Architectures"
            ]
        },
        {
            "id": 2,
            "project_name": "Terraform for AWS",
            "description": "Automated the provisioning of a complex AWS infrastructure using Terraform. Included services like VPC, CloudFront, EC2, ALB, ElastiCache, Amazon MQ, and S3 to ensure high availability, scalability, and secure traffic management.",
            "year": 2023,
            "month": 9,
            "technologies_used": [
                "Terraform",
                "AWS",
                "CloudFront",
                "ElastiCache",
                "Amazon MQ",
                "S3"
            ]
        },
        {
            "id": 1,
            "project_name": "Terraform for AWS",
            "description": "Automating the deployment of AWS infrastructure using Terraform, including VPC, MongoDB setup, EC2 instance configuration, and ALB setup.",
            "year": 2023,
            "month": 9,
            "technologies_used": [
                "Terraform",
                "AWS"
            ]
        }
    ]
}